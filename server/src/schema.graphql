type Query {
    job(id: ID!): Job
    jobs(limit: Int, startKey: ExclusiveStartKeyInput): PaginatedJobs
    company(id: ID!): Company
    companies: [Company!]
    searchCompany(name: String!): [Company!]
    userById(id: ID!): User
    userByEmail(email: ID!): User
}

type Mutation {
    createJob(input: createJobInput!): Job
    updateJob(id: ID!, input: createJobInput!): Job
    deleteJob(id: ID!): Job
    createCompany(input: createCompanyInput): Company
}

input createJobInput {
    title: String!, description: String!
}

input createCompanyInput {
    id: ID, name: String, description: String
}

"""
This is a pointer to start key
for the Job
"""
input ExclusiveStartKeyInput {
    SK: String, 
    PK: String, 
    GSI1PK: String, 
    GSI1SK: String
}

"""
This is a pointer to the last 
evaluated and returned job
"""
type LastEvaluatedKey {
    SK: String, 
    PK: String, 
    GSI1PK: String, 
    GSI1SK: String
}

"""
A job posting in the job board
"""
type Job {
    id: ID!
    title: String!
    description: String!
    """The date when the job was published, ISO 8601 Date, ex: 2019-07-20T00:00:00.000Z"""
    date: String!
    company: Company!
}

"""
This will return a list of jobs, a counter
and the last key evaluated that will be used
for the infinity scrolling
"""
type PaginatedJobs {
    jobs: [Job!]
    count: Int
    lastKey: LastEvaluatedKey
}

type Company {
    id: ID!
    name: String!
    description: String!
    jobs: [Job!]
}

type User {
    id: ID!
    email: String!
    name: String!
    companyId: String!
    jobs: [Job!]
    company: Company
}